{"version":3,"sources":["components/Filter/Filter.module.css","redux/actions.js","redux/selectors.js","components/Contacts/Contacts.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","App.js","redux/reducers.js","redux/store.js","index.js","components/Form/Form.module.css","components/Contacts/Contacts.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","filterContact","getFilter","state","contacts","filter","getVisibleContacts","items","getItems","toLowerCase","includes","Contacts","contactsItem","useSelector","dispatch","useDispatch","className","s","list","map","item","text","btn","type","onClick","Form","useState","setName","setNumber","handleInput","event","currentTarget","value","reset","onSubmit","preventDefault","form","label","input","onChange","pattern","title","required","Filter","wrapper","e","target","App","contactsInitialState","createReducer","window","alert","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f7ae65d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__31P1U\",\"label\":\"Filter_label__2KyQC\",\"input\":\"Filter_input__37zjF\"};","import { createAction, nanoid } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\r\n    payload: {\r\n        id: nanoid(),\r\n        name,\r\n        number,\r\n    },\r\n}));\r\nexport const deleteContact = createAction('contacts/delete');\r\nexport const filterContact = createAction('contacts/filter');","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getVisibleContacts = state => {\r\n    const items = getItems(state);\r\n    const filter = getFilter(state);\r\n    return items.filter(({ name }) => name.toLowerCase().includes(filter))\r\n};","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteContact } from '../../redux/actions';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport s from './Contacts.module.css';\r\n\r\nexport default function Contacts() {\r\n    const contactsItem = useSelector(getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n\r\n    if (contactsItem) {\r\n        return (\r\n            <ul className={s.list}>\r\n                {contactsItem.map(item => (\r\n                    <li key={item.id} className={s.item}>\r\n                        <p className={s.text}>\r\n                            {item.name}: {item.number}\r\n                        </p>\r\n                        <button\r\n                            className={s.btn}\r\n                            type=\"button\"\r\n                            onClick={() => dispatch(deleteContact(item.id))}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n    return;\r\n}","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addContact } from '../../redux/actions';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const handleInput = event => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === 'name') {\r\n            setName(value);\r\n        } else if (name === 'number') {\r\n            setNumber(value);\r\n        }\r\n    };\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        dispatch(\r\n            addContact({\r\n                name,\r\n                number,\r\n            }),\r\n        );\r\n        reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.form}>\r\n            <label className={s.label}>\r\n                Name\r\n                <input\r\n                    className={s.input}\r\n                    value={name}\r\n                    onChange={handleInput}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n            </label>\r\n            <label className={s.label}>\r\n                Number\r\n                <input\r\n                    className={s.input}\r\n                    value={number}\r\n                    onChange={handleInput}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.btn}>\r\n                Add to contacts\r\n            </button>\r\n        </form>\r\n    );\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { filterContact } from '../../redux/actions';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n    const value = useSelector(getFilter);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <label className={s.label}>\r\n                Find contacts by name\r\n                <input\r\n                    className={s.input}\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={value}\r\n                    onChange={e => dispatch(filterContact(e.target.value))}\r\n                ></input>\r\n            </label>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport Contacts from './components/Contacts/Contacts';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <Contacts />\n    </>\n  )\n}","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, filterContact } from './actions';\r\n\r\nconst contactsInitialState = {\r\n    items: [],\r\n    filter: '',\r\n};\r\n\r\nconst items = createReducer(contactsInitialState.items, {\r\n    [addContact]: (state, { payload }) => {\r\n        const namesArray = state.map(item => item.name);\r\n        if (namesArray.includes(payload.name)) {\r\n            window.alert(`${payload.name} is already in contacts`);\r\n            return state;\r\n        } else {\r\n            return [...state, payload];\r\n        }\r\n    },\r\n    [deleteContact]: (state, { payload }) => {\r\n        return state.filter(({ id }) => id !== payload);\r\n    },\r\n});\r\n\r\nconst filter = createReducer(contactsInitialState.filter, {\r\n    [filterContact]: (_, { payload }) => {\r\n        return payload.toLowerCase();\r\n    },\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n    key: 'Contacts',\r\n    storage,\r\n    blacklist: 'filter',\r\n};\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(persistConfig, contactsReducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={\"L O A D I N G\"} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2Y7Ct\",\"label\":\"Form_label__1-E9G\",\"input\":\"Form_input__6Sdpu\",\"btn\":\"Form_btn__2LIcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__3NCCO\",\"text\":\"Contacts_text__JVcQ0\",\"btn\":\"Contacts_btn__1-fux\"};"],"sourceRoot":""}